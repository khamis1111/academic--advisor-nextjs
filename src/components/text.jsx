"use client";

import MultiSelect from "@/components/MultiSelect";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import {
  firstYearCourses,
  fourthYearCourses,
  secondYearCourses,
  thirdYearCourses,
} from "@/utils/coursesData";
import { GoogleGenerativeAI } from "@google/generative-ai";
import { useEffect, useState } from "react";
import { Skeleton } from "@/components/ui/skeleton";
import { motion } from "framer-motion";
import { Card } from "@/components/ui/card";

const genAI = new GoogleGenerativeAI(process.env.NEXT_PUBLIC_GOOGLE_AI_API_KEY);
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

const generationConfig = {
  temperature: 2,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 8192,
  responseMimeType: "text/plain",
};

export default function StudentAdvisors() {
  const [gpa, setGpa] = useState("");
  const [advice, setAdvice] = useState("");
  const [loading, setLoading] = useState(false);
  const [selected, setSelected] = useState([]);
  const [level, setLevel] = useState("");
  const [department, setDepartment] = useState("");
  const [term, setTerm] = useState("");

  useEffect(() => {
    setSelected([]);
  }, [term]);

  const courses = () => {
    let items;
    let year;

    switch (level) {
      case "first":
        year = firstYearCourses;
        break;
      case "second":
        year = secondYearCourses;
        break;
      case "third":
        year = thirdYearCourses.filter(
          (data) => data.department === department
        );
        break;
      case "fourth":
        year = fourthYearCourses.filter(
          (data) => data.department === department
        );
        break;
      default:
        year = [];
        break;
    }

    if (term === "first") {
      items = year.filter((data) => data.term === "term1");
    } else if (term === "second") {
      items = year.filter((data) => data.term === "term2");
    }

    return items;
  };

  const handleSubmit = async (e) => {
    let prompt;

    e.preventDefault();
    setLoading(true);

    const coursesDetails = courses().map((course) => {
      const prerequisitesNames =
        course.prerequisites.length > 0
          ? course.prerequisites
              .map(
                (code) =>
                  firstYearCourses.find((data) => data.courseCode === code)
                    ?.nameAr ||
                  secondYearCourses.find((data) => data.courseCode === code)
                    ?.nameAr ||
                  thirdYearCourses.find((data) => data.courseCode === code)
                    ?.nameAr ||
                  fourthYearCourses.find((data) => data.courseCode === code)
                    ?.nameAr
              )
              .join(", ")
          : "ูุง ููุฌุฏ";

      return `${course.nameAr} (${course.name}) - ุณุงุนุงุช ูุนุชูุฏุฉ: ${course.credits}, ุงููุชุทูุจุงุช ุงููุณุจูุฉ: ${prerequisitesNames}`;
    });

    prompt = `
      ุฃูุช ูุฑุดุฏ ุฃูุงุฏููู ูุทูุงุจ ูู ุงูุฌุงูุนุฉ. ุทุงูุจ ุญุงุตู ุนูู GPA ุจูููุฉ ${gpa} ูุฑุบุจ ูู ุงูุชุณุฌูู ูู ุงูููุงุฏ ุงูุชุงููุฉ:

      ${selected.map((data) => data.name)}

      ูุฐู ูู ุชูุงุตูู ุฌููุน ุงูููุงุฏ ุงููุชุงุญุฉ:
      
      ${coursesDetails}

      ุจูุงุกู ุนูู ูุฐู ุงููุนูููุงุชุ ูุฑุฌู ุชูุฏูู ุงููุตูุญุฉ ุจุดุฃู:
      1. ูุง ูู ูุชุทูุจุงุช ูู ูุงุฏุฉ ุชู ุงุฎุชูุงุฑูุง.
      2. ูุง ุฅุฐุง ูุงู ุงูุทุงูุจ ููููู ุงูุชุณุฌูู ูู ุฌููุน ุงูููุงุฏ ุงููุทููุจุฉ.
      3. ุฅุฐุง ูุงู ูุง ููููู ุงูุชุณุฌูู ูู ุจุนุถ ุงูููุงุฏุ ุฃู ุงูููุงุฏ ููููู ุชุณุฌูููุง ูููุงุฐุง.
      4. ุงูุชุฑุงุญุงุช ููููุงุฏ ุงูุจุฏููุฉ ุฅุฐุง ูุงูุช ุจุนุถ ุงูููุงุฏ ุบูุฑ ูุชุงุญุฉ ุฃู ุบูุฑ ููุงุณุจุฉ.
      5. ุฃู ูุตุงุฆุญ ุฃูุงุฏูููุฉ ุฃุฎุฑู ุจูุงุกู ุนูู ูุนุฏูู ุงูุชุฑุงููู ูุงุฎุชูุงุฑู ููููุงุฏ.

      ูุฑุฌู ุชูุฏูู ุงูุฅุฌุงุจุฉ ุจุงููุบุฉ ุงูุนุฑุจูุฉ ูุจุดูู ูุงุถุญ ููุฎุชุตุฑ
    `;

    try {
      const result = await model.generateContent(prompt, generationConfig);
      setAdvice(result.response.text());
    } catch (error) {
      console.error("Error generating advice:", error);
      setAdvice("ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุญุตูู ุนูู ุงููุตูุญุฉ. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.");
    }

    console.log(prompt);

    setLoading(false);
  };

  return (
    <div className="p-4">
      <div className="h-14">
        <p className="text-2xl md:text-3xl font-semibold">
          ูุณุงุนุฏ ุงููุฑุดุฏ ุงูุฃูุงุฏููู ๐
        </p>
      </div>
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
        {/* ุงููุฏุฎูุงุช */}
        <div className="space-y-3">
          <div className="">
            <Label>ุฃุฏุฎู ูุนุฏูู ุงูุชุฑุงููู* </Label>
            <Input
              label="ุฃุฏุฎู ูุนุฏูู ุงูุชุฑุงููู"
              type="number"
              step="0.01"
              min="0"
              max="4"
              value={gpa}
              onChange={(e) =>
                e.target.value >= 0 && e.target.value <= 4
                  ? setGpa(e.target.value)
                  : null
              }
              placeholder="ุฃุฏุฎู ุงููุนุฏู ูู 0 ุฅูู 4"
              required
            />
          </div>
          <div className="">
            <Label>ุงุฎุชุฑ ูุณุชูุงู ุงูุฏุฑุงุณู* </Label>
            <Select onValueChange={setLevel} disabled={!gpa}>
              <SelectTrigger className="">
                <SelectValue placeholder="ุงุฎุชุฑ ูุณุชูุงู ุงูุฏุฑุงุณู" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="first">ุงููุณุชูู ุงูุฃูู</SelectItem>
                <SelectItem value="second">ุงููุณุชูู ุงูุซุงูู</SelectItem>
                <SelectItem value="third">ุงููุณุชูู ุงูุซุงูุซ</SelectItem>
                <SelectItem value="fourth">ุงููุณุชูู ุงูุฑุงุจุน</SelectItem>
              </SelectContent>
            </Select>
          </div>
          {level === "third" || level === "fourth" ? (
            <div className="">
              <Label>ุงุฎุชุฑ ูุณูู ุงูุฏุฑุงุณู* </Label>
              <Select onValueChange={setDepartment} disabled={!level}>
                <SelectTrigger className="">
                  <SelectValue placeholder="ุงุฎุชุฑ ูุณูู ุงูุฏุฑุงุณู" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="IS">ูุธู ุงููุนูููุงุช</SelectItem>
                  <SelectItem value="CS">ุนููู ุงูุญุงุณูุจ</SelectItem>
                  <SelectItem value="IT">ุชูููููุฌูุง ุงููุนูููุงุช</SelectItem>
                </SelectContent>
              </Select>
            </div>
          ) : null}
          <div className="">
            <Label>ุงุฎุชุฑ ุงููุตู ุงูุฏุฑุงุณู* </Label>
            <Select
              onValueChange={setTerm}
              disabled={
                level === "third" || level === "fourth" ? !department : !level
              }
            >
              <SelectTrigger className="">
                <SelectValue placeholder="ุงุฎุชุฑ ุงููุตู ุงูุฏุฑุงุณู" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="first">ุงููุตู ุงูุฃูู</SelectItem>
                <SelectItem value="second">ุงููุตู ุงูุซุงูู</SelectItem>
              </SelectContent>
            </Select>
          </div>
          <div className="">
            <Label>ุงูููุฑุฑุงุช ุงูุฏุฑุงุณูุฉ ููุฐุง ุงููุตู* </Label>
            <MultiSelect
              disabled={!term}
              name={"Subjects"}
              selected={selected}
              setSelected={setSelected}
              items={courses()}
            />
          </div>
          <div className="text-end">
            <Button
              disabled={loading || selected.length === 0}
              onClick={handleSubmit}
            >
              {loading ? "ุฌุงุฑู ุงูุญุตูู ุนูู ุงููุตูุญุฉ..." : "ุงุญุตู ุนูู ุงููุตูุญุฉ"}
            </Button>
          </div>
        </div>

        {/* ุงูุงุณุชุฌุงุจุฉ */}
        {loading ? (
          <Skeleton className="rounded-md shadow-sm h-[calc(100vh-5.5rem)] overflow-auto border" />
        ) : (
          <Card className="p-4 bg-gray-100 h-[calc(100vh-5.5rem)] overflow-auto">
            {advice ? (
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
              >
                <h2 className="text-xl font-semibold mb-2">
                  ูุตูุญุฉ ุงููุฑุดุฏ ุงูุฃูุงุฏููู:
                </h2>
                <p className="whitespace-pre-wrap">{advice}</p>
              </motion.div>
            ) : (
              <div className="flex items-center justify-center h-full">
                <p className="text-3xl font-semibold">
                  ุฃุณุฑุน ููุญุตูู ุนูู ุงููุตูุญุฉ ๐
                </p>
              </div>
            )}
          </Card>
        )}
      </div>
    </div>
  );
}
